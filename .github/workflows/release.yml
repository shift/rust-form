name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - os: ubuntu-latest
          asset_name: rustform-linux-x86_64
          target: x86_64-unknown-linux-gnu
        - os: windows-latest
          asset_name: rustform-windows-x86_64.exe
          target: x86_64-pc-windows-msvc
        - os: macos-latest
          asset_name: rustform-macos-x86_64
          target: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix (Unix)
      if: matrix.os != 'windows-latest'
      uses: cachix/install-nix-action@v24
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build (Unix)
      if: matrix.os != 'windows-latest'
      run: nix build
      
    - name: Install Rust (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
        
    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./target/release/rustform${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/octet-stream