name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security scans
    - cron: '0 2 * * 1'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Nix Cache
      uses: cachix/cachix-action@v14
      with:
        name: rust-form
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        skipPush: true
        
    - name: Run cargo audit
      run: nix develop -c -- cargo audit --deny warnings
      
    - name: Run cargo deny
      run: nix develop -c -- cargo deny check

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate

  semgrep:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Semgrep
      run: semgrep ci --config=auto
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: ['rust']
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Nix Cache
      uses: cachix/cachix-action@v14
      with:
        name: rust-form
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        skipPush: true
        
    - name: Build project
      run: nix build
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    if: always()
    needs: [audit, semgrep, codeql, trivy]
    steps:
    - name: Security Check Results
      run: |
        echo "üõ°Ô∏è Security Scan Summary:"
        echo "- Audit: ${{ needs.audit.result }}"
        echo "- Semgrep: ${{ needs.semgrep.result }}"
        echo "- CodeQL: ${{ needs.codeql.result }}"
        echo "- Trivy: ${{ needs.trivy.result }}"
        
        if [[ "${{ needs.audit.result }}" == "failure" ]]; then
          echo "‚ùå Security audit failed"
          exit 1
        else
          echo "‚úÖ Security checks completed"
        fi